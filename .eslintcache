[{"C:\\Users\\marle\\Documents\\+Programmieren2020\\emmet-typing-game\\src\\index.js":"1","C:\\Users\\marle\\Documents\\+Programmieren2020\\emmet-typing-game\\src\\App.js":"2","C:\\Users\\marle\\Documents\\+Programmieren2020\\emmet-typing-game\\src\\reportWebVitals.js":"3","C:\\Users\\marle\\Documents\\+Programmieren2020\\emmet-typing-game\\src\\components\\Home.js":"4","C:\\Users\\marle\\Documents\\+Programmieren2020\\emmet-typing-game\\src\\components\\GameArea.js":"5","C:\\Users\\marle\\Documents\\+Programmieren2020\\emmet-typing-game\\src\\components\\TextArea.js":"6","C:\\Users\\marle\\Documents\\+Programmieren2020\\emmet-typing-game\\src\\components\\GameInterface.js":"7","C:\\Users\\marle\\Documents\\+Programmieren2020\\emmet-typing-game\\src\\components\\CreateOrder.js":"8","C:\\Users\\marle\\Documents\\+Programmieren2020\\emmet-typing-game\\src\\components\\Keyboard.js":"9","C:\\Users\\marle\\Documents\\+Programmieren2020\\emmet-typing-game\\src\\constants.js":"10","C:\\Users\\marle\\Documents\\+Programmieren2020\\emmet-typing-game\\src\\components\\Dialog.js":"11","C:\\Users\\marle\\Documents\\+Programmieren2020\\emmet-typing-game\\src\\components\\StaticHeart.js":"12","C:\\Users\\marle\\Documents\\+Programmieren2020\\emmet-typing-game\\src\\components\\AnimatedHeart.js":"13","C:\\Users\\marle\\Documents\\+Programmieren2020\\emmet-typing-game\\src\\components\\BTN.js":"14"},{"size":517,"mtime":1611862454985,"results":"15","hashOfConfig":"16"},{"size":2608,"mtime":1620212158229,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":1573,"mtime":1619007800575,"results":"19","hashOfConfig":"16"},{"size":7532,"mtime":1646226862441,"results":"20","hashOfConfig":"16"},{"size":4011,"mtime":1646227731947,"results":"21","hashOfConfig":"16"},{"size":4013,"mtime":1646227134491,"results":"22","hashOfConfig":"16"},{"size":364,"mtime":1611862630081,"results":"23","hashOfConfig":"16"},{"size":3998,"mtime":1620212158274,"results":"24","hashOfConfig":"16"},{"size":1071,"mtime":1620212158299,"results":"25","hashOfConfig":"16"},{"size":4236,"mtime":1620301866377,"results":"26","hashOfConfig":"16"},{"size":639,"mtime":1620218326119,"results":"27","hashOfConfig":"16"},{"size":2667,"mtime":1620218730026,"results":"28","hashOfConfig":"16"},{"size":1951,"mtime":1621272364580,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1kds727",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"32"},"C:\\Users\\marle\\Documents\\+Programmieren2020\\emmet-typing-game\\src\\index.js",[],["62","63"],"C:\\Users\\marle\\Documents\\+Programmieren2020\\emmet-typing-game\\src\\App.js",[],"C:\\Users\\marle\\Documents\\+Programmieren2020\\emmet-typing-game\\src\\reportWebVitals.js",[],"C:\\Users\\marle\\Documents\\+Programmieren2020\\emmet-typing-game\\src\\components\\Home.js",[],"C:\\Users\\marle\\Documents\\+Programmieren2020\\emmet-typing-game\\src\\components\\GameArea.js",["64","65","66"],"C:\\Users\\marle\\Documents\\+Programmieren2020\\emmet-typing-game\\src\\components\\TextArea.js",["67","68","69","70"],"C:\\Users\\marle\\Documents\\+Programmieren2020\\emmet-typing-game\\src\\components\\GameInterface.js",["71","72"],"C:\\Users\\marle\\Documents\\+Programmieren2020\\emmet-typing-game\\src\\components\\CreateOrder.js",[],"C:\\Users\\marle\\Documents\\+Programmieren2020\\emmet-typing-game\\src\\components\\Keyboard.js",[],"C:\\Users\\marle\\Documents\\+Programmieren2020\\emmet-typing-game\\src\\constants.js",[],"C:\\Users\\marle\\Documents\\+Programmieren2020\\emmet-typing-game\\src\\components\\Dialog.js",["73"],"import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Link } from '@reach/router'\r\nimport { COLORS } from '../constants'\r\n\r\nexport default function Dialog(props) {\r\n    const {\r\n        visible,\r\n        setVisible,\r\n        \r\n        life,\r\n        setLife,\r\n        setScoreState,\r\n        setFeedback,\r\n        setOrderNum,\r\n        dialogType, \r\n    } = props\r\n\r\n    const dialog = [\r\n        {\r\n          winner: [\r\n            {\r\n              img: \"https://img.icons8.com/dotty/80/000000/trophy.png\",\r\n              img_alt: \"Icon einer Trophaee\",\r\n              headline: \"Wow, geiler Typ!\",\r\n              text: \"Du hast ALLE Fragen richtig beantwortet!\"\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          game_over: [\r\n            {\r\n              img: \"https://img.icons8.com/dotty/80/000000/sad-cloud.png\",\r\n              img_alt: \"Icon einer traurigen Wolke\",\r\n              headline: \"Ohje, leider verloren :-(\",\r\n              text: \"Kopf hoch, beim nächsten Mal klappt es besser :-)\"\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n\r\n      let prefix = \"\"\r\n      function createPrefix() {\r\n        if (dialogType === \"winner\") {\r\n          prefix = dialog[0].winner[0]\r\n          return prefix\r\n        } else if (dialogType === \"game_over\") {\r\n          prefix = dialog[1].game_over[0]\r\n        }\r\n        return prefix\r\n      }\r\n      createPrefix()\r\n\r\n\r\n    const handleNoBtnClick = () => {\r\n        setVisible(false) // GameOverdialog ausblenden, to refactor\r\n        setLife(3) \r\n       //life.current= 3\r\n        setScoreState(0)\r\n        setFeedback('')\r\n        setOrderNum(0)\r\n    }\r\n\r\n    const content = (\r\n        <Wrap>\r\n            <Header>\r\n            <HeadLogo alt={prefix.img_alt} src={prefix.img} />\r\n            </Header>\r\n            <H2>{prefix.headline}</H2>\r\n            <P>{prefix.text}</P>\r\n            <BTNdiv>\r\n                <Link to=\"/emmet-typing-game/\">\r\n                    <BTN title=\"Zurück zum Startbereich\">Beenden</BTN>\r\n                </Link>\r\n                <Link to=\"/emmet-typing-game/gamearea/\">\r\n                    <BTN title=\"Startet neues Spiel\" onClick={handleNoBtnClick}>\r\n                        Nochmal\r\n                    </BTN>\r\n                </Link>\r\n            </BTNdiv>\r\n        </Wrap>\r\n    )\r\n\r\n    let toShow\r\n\r\n    if (visible) {\r\n        toShow = (\r\n            <DIV>\r\n                <InsetShadow>{content}</InsetShadow>\r\n            </DIV>\r\n        )\r\n    } else {\r\n        toShow = (\r\n            <DIV hidden>\r\n                <InsetShadow>{content}</InsetShadow>\r\n            </DIV>\r\n        )\r\n    }\r\n\r\n    return <>{toShow}</>\r\n}\r\n\r\nconst BTNdiv = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\nconst H2 = styled.div`\r\n    font-size: 1.2em;\r\n    font-weight: bold;\r\n    margin-bottom: 10px;\r\n`\r\n\r\nconst P = styled.div`\r\n    font-size: 0.8em;\r\n    padding:0 30px;\r\n`\r\n\r\nconst BTN = styled.button`\r\n    background-color: rgba(${COLORS.violet}, 0.5);\r\n    color: rgb(${COLORS.lightText});\r\n    font-weight: bold;\r\n    letter-spacing: 1px;\r\n    cursor: pointer;\r\n    min-width: 60px;\r\n    border: none;\r\n    border-radius: 20px;\r\n    box-shadow: 1px 2px 3px 3px rgba(58, 32, 10, 0.2);\r\n    margin: 20px 20px 0;\r\n    padding: 10px;\r\n    &:hover {\r\n        background-color: rgb(${COLORS.background1_NUM});\r\n    }\r\n`\r\n\r\nconst Wrap = styled.div`\r\n    width: 70vw;\r\n   \r\n`\r\nconst Header = styled.header`\r\n    margin-top: 30px;\r\n`\r\nconst HeadLogo = styled.img`\r\n    opacity: 1;\r\n    height: 80px;\r\n    padding: 2px;\r\n    margin-top: -20px;\r\n`\r\nconst InsetShadow = styled.div`\r\n    position: absolute;\r\n    height: 100%;\r\n    box-shadow: inset 1px 1px 2px 0px rgba(${COLORS.light}, 0.8);\r\n   \r\n`\r\n\r\nconst DIV = styled.div`\r\n    position: absolute;\r\n    opacity: 1;\r\n    background-color: rgb(${COLORS.hintfield});\r\n    border-width: 2px;\r\n    border-style: solid;\r\n    border-image: linear-gradient(\r\n            to bottom,\r\n            rgba(${COLORS.light}, 0) 1%,\r\n            rgba(${COLORS.light}, 0.8) 10%,\r\n            rgba(${COLORS.light}, 0) 100%\r\n        )\r\n        1 100%;\r\n    box-shadow: 2px 2px 5px 3px ${COLORS.shadow_RGBA};\r\n    width: 70vw;\r\n    height: 47vh;\r\n    margin-top: 10vh;\r\n`\r\n","C:\\Users\\marle\\Documents\\+Programmieren2020\\emmet-typing-game\\src\\components\\StaticHeart.js",[],"C:\\Users\\marle\\Documents\\+Programmieren2020\\emmet-typing-game\\src\\components\\AnimatedHeart.js",["74"],"import styled, { keyframes } from \"styled-components\"\r\n\r\nexport default function AnimatedHeart(props) {\r\n  const { stopAnimation, setStopAnimation } = props\r\n\r\n  const RightHeart = styled.g`\r\n    animation: ${brokeOffDownFadeOut_right} 1s ease-in forwards;\r\n    animation-play-state: ${stopAnimation};\r\n  `\r\n\r\n  const LeftHeart = styled.g`\r\n    animation: ${brokeOffDownFadeOut_left} 1s ease-in forwards;\r\n    animation-play-state: ${stopAnimation};\r\n  `\r\n  return (\r\n    <>\r\n      <Heart\r\n        className=\"heart3\"\r\n        width=\"132\"\r\n        height=\"107\"\r\n        viewBox=\"0 0 171 146\"\r\n        fill=\"black\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <LeftHeart className=\"heart3-left\">\r\n          <path\r\n            fill-rule=\"evenodd\"\r\n            clip-rule=\"evenodd\"\r\n            d=\"M84.3753 32.9644L79 47L89 71L67 87L97 109L83.8239 145.6C75.0561 139.209 -26.1111 63.97 6.4257 18.0357C39.759 -29.0232 82.704 30.6078 84.3753 32.9644Z\"\r\n          />\r\n        </LeftHeart>\r\n        <RightHeart className=\"heart3-right\">\r\n          <path\r\n            fill-rule=\"evenodd\"\r\n            clip-rule=\"evenodd\"\r\n            d=\"M83.3753 32.7997L78 46.8353L88 70.8353L66 86.8353L96 108.835L82.8239 145.435C83.2182 145.723 83.4257 145.871 83.4257 145.871C83.4257 145.871 201.426 60.871 162.426 17.8709C123.426 -25.1291 83.4257 32.871 83.4257 32.871C83.4257 32.871 83.4088 32.8468 83.3753 32.7997Z\"\r\n          />\r\n        </RightHeart>\r\n      </Heart>\r\n    </>\r\n  )\r\n}\r\n\r\nconst brokeOffDownFadeOut_right = keyframes`\r\n 0% {\r\n    transform: translate(0%, 0%) rotate(0deg);\r\n    transform-origin: 0% bottom 0px;\r\n  }\r\n  10% {\r\n    transform: rotate(60deg);\r\n    transform: translate(10%, 0%) rotate(0deg);\r\n    transform-origin: 0% bottom 0px;\r\n    opacity: 1;\r\n  }\r\n  75% {\r\n    transform: translate(100%, 50%) rotate(120deg);\r\n    transform-origin: 0% bottom 0px;\r\n    opacity: 0;\r\n  }\r\n  100% {\r\n    transform: translate(100%, 50%) rotate(120deg);\r\n    transform-origin: 0% bottom 0px;\r\n    opacity: 0;\r\n  }\r\n \r\n`\r\n\r\nconst brokeOffDownFadeOut_left = keyframes`\r\n\r\n 0% {\r\n    transform: translate(0%, 0%) rotate(0deg);\r\n    transform-origin: 90% bottom -20px;\r\n  }\r\n  20% {\r\n    transform: rotate(60deg);\r\n    transform: translate(0%, 0%);\r\n    transform-origin: 90% bottom -20px;\r\n    opacity: 1;\r\n  }\r\n  75% {\r\n    transform: translate(-10%, 20%) rotate(-120deg);\r\n    transform-origin: 90% bottom -20px;\r\n    opacity: 0;\r\n  }\r\n\r\n  100% {\r\n    transform: translate(-10%, 20%) rotate(-120deg);\r\n    transform-origin: 90% bottom -20px;\r\n    opacity: 0;\r\n  }\r\n`\r\n\r\nconst Heart = styled.svg`\r\n    overflow: visible;\r\n    height: 20px;\r\n    width: 35px;\r\n`\r\n","C:\\Users\\marle\\Documents\\+Programmieren2020\\emmet-typing-game\\src\\components\\BTN.js",["75","76","77"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { COLORS, VIEWPORT } from \"../constants\";\r\n\r\nexport default function BTN(props) {\r\n  const { type, onClick } = props;\r\n\r\n  const trash_icon =\r\n    \"https://img.icons8.com/material-outlined/48/ffffff/trash--v2.png\";\r\n  const clear_icon =\r\n    \"https://img.icons8.com/material-outlined/48/ffffff/clear-symbol--v1.png\";\r\n  const ok_icon = \"https://img.icons8.com/android/48/ffffff/checkmark.png\";\r\n\r\n  function renderBtn() {\r\n    const btn = props.type;\r\n\r\n    //////////////////////////////\r\n\r\n    if (props.type === \"ok\") {\r\n      return (\r\n        <Btn title=\"Eingabe bestätigen\" onClick={props.onClick}>\r\n          <img alt=\"Icon von Löschtaste\" src={ok_icon} />\r\n        </Btn>\r\n      );\r\n    } else if (props.type === \"clear\") {\r\n      return (\r\n        <Btn title=\"Eingabe bestätigen\" onClick={props.onClick}>\r\n          <img alt=\"Icon von Löschtaste\" src={clear_icon} />\r\n        </Btn>\r\n      );\r\n    } else if (props.type === \"delete\") {\r\n      return (\r\n        <Btn title=\"Eingabe bestätigen\" onClick={props.onClick}>\r\n          <img alt=\"Icon von Löschtaste\" src={trash_icon} />\r\n        </Btn>\r\n      );\r\n    }\r\n\r\n    /////////////////////////////\r\n\r\n    //return <Btn>{btn}</Btn>;\r\n  }\r\n\r\n  return <>{renderBtn()}</>;\r\n}\r\n\r\nconst Btn = styled.button`\r\n  cursor: pointer;\r\n  color: rgb(${COLORS.lightText});\r\n  font-weight: bold;\r\n  letter-spacing: 1px;\r\n  background-color: rgba(${COLORS.violet}, 0.5);\r\n  border: none;\r\n  border-radius: 20px;\r\n  box-shadow: 1px 2px 3px 3px rgba(58, 32, 10, 0.2);\r\n  min-width: 60px;\r\n  height: 40px;\r\n  margin: 20px 10px 0;\r\n  padding: 10px;\r\n  &:hover {\r\n    background-color: rgb(${COLORS.background1_NUM});\r\n  }\r\n  img {\r\n    width: 24px;\r\n    height: 24px;\r\n  }\r\n  :not(:last-child) {\r\n    ${VIEWPORT.small} {\r\n    }\r\n\r\n    ${VIEWPORT.medium} {\r\n    }\r\n\r\n    ${VIEWPORT.large} {\r\n      display: none;\r\n    }\r\n  }\r\n`;\r\n",{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":1,"column":27,"nodeType":"84","messageId":"85","endLine":1,"endColumn":33},{"ruleId":"82","severity":1,"message":"86","line":27,"column":10,"nodeType":"84","messageId":"85","endLine":27,"endColumn":14},{"ruleId":"82","severity":1,"message":"87","line":27,"column":16,"nodeType":"84","messageId":"85","endLine":27,"endColumn":23},{"ruleId":"82","severity":1,"message":"88","line":1,"column":17,"nodeType":"84","messageId":"85","endLine":1,"endColumn":25},{"ruleId":"82","severity":1,"message":"89","line":23,"column":9,"nodeType":"84","messageId":"85","endLine":23,"endColumn":19},{"ruleId":"82","severity":1,"message":"90","line":25,"column":9,"nodeType":"84","messageId":"85","endLine":25,"endColumn":19},{"ruleId":"82","severity":1,"message":"91","line":27,"column":9,"nodeType":"84","messageId":"85","endLine":27,"endColumn":16},{"ruleId":"82","severity":1,"message":"92","line":13,"column":9,"nodeType":"84","messageId":"85","endLine":13,"endColumn":22},{"ruleId":"82","severity":1,"message":"93","line":68,"column":10,"nodeType":"84","messageId":"85","endLine":68,"endColumn":17},{"ruleId":"82","severity":1,"message":"94","line":11,"column":9,"nodeType":"84","messageId":"85","endLine":11,"endColumn":13},{"ruleId":"82","severity":1,"message":"95","line":4,"column":26,"nodeType":"84","messageId":"85","endLine":4,"endColumn":42},{"ruleId":"82","severity":1,"message":"86","line":6,"column":11,"nodeType":"84","messageId":"85","endLine":6,"endColumn":15},{"ruleId":"82","severity":1,"message":"96","line":6,"column":17,"nodeType":"84","messageId":"85","endLine":6,"endColumn":24},{"ruleId":"82","severity":1,"message":"97","line":15,"column":11,"nodeType":"84","messageId":"85","endLine":15,"endColumn":14},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'type' is assigned a value but never used.","'setType' is assigned a value but never used.","'useState' is defined but never used.","'trash_icon' is assigned a value but never used.","'clear_icon' is assigned a value but never used.","'ok_icon' is assigned a value but never used.","'animatedHeart' is assigned a value but never used.","'Lifecon' is defined but never used.","'life' is assigned a value but never used.","'setStopAnimation' is assigned a value but never used.","'onClick' is assigned a value but never used.","'btn' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]